name: Download and Commit MP3 Albums

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: 'Root albums URL (with trailing slash)'
        required: true
        default: 'https://archive.org/download/Sharpnel-Discography/SHARPNELSOUND/albums/'

jobs:
  download-and-upload:
    runs-on: ubuntu-latest

    steps:
      # 1) リポジトリをフル履歴でチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0

      # 2) Git の HTTP 設定を拡張
      - name: Configure Git HTTP settings
        run: |
          git config --global http.postBuffer 524288000
          git config --global http.lowSpeedLimit 0
          git config --global http.lowSpeedTime 999999

      # 3) Git LFS をセットアップして *.mp3 を LFS 管理
      - name: Install Git LFS and track MP3
        run: |
          sudo apt-get update
          sudo apt-get install -y git-lfs
          git lfs install --local
          echo "*.mp3 filter=lfs diff=lfs merge=lfs -text" >> .gitattributes
          git add .gitattributes
          git commit -m "chore: track MP3 via Git LFS" || echo "No changes to .gitattributes"

      # 4) 依存ツール wget, jq をインストール
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget jq

      # 5) BASE_URL を環境変数に設定
      - name: Set base URL
        run: echo "BASE_URL=${{ github.event.inputs.base_url }}" >> $GITHUB_ENV

      # 6) ディレクトリ一覧を取得し、パーセントエンコードをデコードして JSON 配列化
      - name: Fetch list of identifiers
        id: list
        run: |
          # wget --spider で階層レベル1のディレクトリ一覧を取得
          raw_ids=$(wget --spider -r -l1 -nd -np "$BASE_URL" 2>&1 \
            | grep '^--' \
            | awk '{print $3}' \
            | grep -oP '[^/]+(?=/$)' \
            | sort -u)

          # URL エンコード(%xx)をデコード
          decoded_ids=()
          for id in $raw_ids; do
            decoded=$(printf '%b' "${id//%/\\x}")
            decoded_ids+=("$decoded")
          done

          # JSON 配列に変換して GITHUB_OUTPUT へ
          json=$(printf '%s\n' "${decoded_ids[@]}" | jq -R . | jq -s .)
          echo "Found identifiers: ${decoded_ids[*]}"
          echo "IDENTIFIERS<<EOF" >> $GITHUB_OUTPUT
          echo "$json"               >> $GITHUB_OUTPUT
          echo "EOF"                 >> $GITHUB_OUTPUT

      # 7) MP3 をダウンロード
      - name: Download MP3 files for each identifier
        run: |
          ids=$(echo '${{ steps.list.outputs.IDENTIFIERS }}' | jq -r '.[]')
          mkdir -p downloads
          for id in $ids; do
            url="${BASE_URL}${id}/"
            echo "→ Downloading $id from $url"
            wget --spider --quiet "$url" \
              && wget -r -np -nd -A '*.mp3' -P "downloads/$id" "$url" \
              || echo "⚠️ $url が存在しないかアクセス不可"
          done

      # 8) albums/ 配下に移動
      - name: Copy into repo
        run: |
          mkdir -p albums
          for d in downloads/*; do
            dir_name=$(basename "$d")
            mkdir -p "albums/${dir_name}"
            mv "$d"/*.mp3 "albums/${dir_name}/" \
              || echo "⚠️ $dir_name に MP3 がありませんでした"
          done

      # 9) コミット＆プッシュ
      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add albums/
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add MP3s for new albums ($(date +'%Y-%m-%d'))"
            git push
          fi
